webpackJsonp([111], {1452: function (e, t, a) { 'use strict'; var r = a(1453); t.a = r.a }, 1453: function (e, t, a) { 'use strict'; t.a = {data: function () { return {data: [], total: 0, loading: !1, sortField: 'vote_count', sortOrder: 'desc', defaultSortOrder: 'desc', page: 1, perPage: 20} }, methods: {loadAsyncData: function () { var e = this, t = ['api_key=bb6f51bef07465653c3e553d6ab161a8', 'language=en-US', 'include_adult=false', 'include_video=false', 'sort_by=' + this.sortField + '.' + this.sortOrder, 'page=' + this.page].join('&'); this.loading = !0, this.$http.get('https://api.themoviedb.org/3/discover/movie?' + t).then(function (t) { var a = t.data; e.data = []; var r = a.total_results; a.total_results / e.perPage > 1e3 && (r = 1e3 * e.perPage), e.total = r, a.results.forEach(function (t) { t.release_date = t.release_date ? t.release_date.replace(/-/g, '/') : null, e.data.push(t) }), e.loading = !1 }).catch(function (t) { throw e.data = [], e.total = 0, e.loading = !1, t }) }, onPageChange: function (e) { this.page = e, this.loadAsyncData() }, onSort: function (e, t) { this.sortField = e, this.sortOrder = t, this.loadAsyncData() }, type: function (e) { var t = parseFloat(e); return t < 6 ? 'is-danger' : t >= 6 && t < 8 ? 'is-warning' : t >= 8 ? 'is-success' : void 0 }}, filters: {truncate: function (e, t) { return e.length > t ? e.substr(0, t) + '...' : e }}, mounted: function () { this.loadAsyncData() }} }, 2038: function (e, t, a) { 'use strict'; var r = a(2039); a.d(t, 'a', function () { return r.a }), a.d(t, 'b', function () { return r.b }) }, 2039: function (e, t, a) { 'use strict'; a.d(t, 'a', function () { return r }), a.d(t, 'b', function () { return n }); var r = function () { var e = this, t = e.$createElement, a = e._self._c || t; return a('section', [a('b-table', {attrs: {data: e.data, loading: e.loading, paginated: '', 'backend-pagination': '', total: e.total, 'per-page': e.perPage, 'aria-next-label': 'Next page', 'aria-previous-label': 'Previous page', 'aria-page-label': 'Page', 'aria-current-label': 'Current page', 'backend-sorting': '', 'default-sort-direction': e.defaultSortOrder, 'default-sort': [e.sortField, e.sortOrder]}, on: {'page-change': e.onPageChange, sort: e.onSort}}, [a('b-table-column', {attrs: {field: 'original_title', label: 'Title', sortable: ''}, scopedSlots: e._u([{key: 'default', fn: function (t) { return [e._v(' ' + e._s(t.row.original_title) + ' ')] }}])}), a('b-table-column', {attrs: {field: 'vote_average', label: 'Vote Average', numeric: '', sortable: ''}, scopedSlots: e._u([{key: 'default', fn: function (t) { return [a('span', {staticClass: 'tag', class: e.type(t.row.vote_average)}, [e._v(' ' + e._s(t.row.vote_average) + ' ')])] }}])}), a('b-table-column', {attrs: {field: 'vote_count', label: 'Vote Count', numeric: '', sortable: ''}, scopedSlots: e._u([{key: 'default', fn: function (t) { return [e._v(' ' + e._s(t.row.vote_count) + ' ')] }}])}), a('b-table-column', {attrs: {field: 'release_date', label: 'Release Date', sortable: '', centered: ''}, scopedSlots: e._u([{key: 'default', fn: function (t) { return [e._v(' ' + e._s(t.row.release_date ? new Date(t.row.release_date).toLocaleDateString() : 'unknown') + ' ')] }}])}), a('b-table-column', {attrs: {label: 'Overview', width: '500'}, scopedSlots: e._u([{key: 'default', fn: function (t) { return [e._v(' ' + e._s(e._f('truncate')(t.row.overview, 80)) + ' ')] }}])})], 1)], 1) }, n = [] }, 514: function (e, t, a) { 'use strict'; Object.defineProperty(t, '__esModule', {value: !0}); var r = a(2038), n = a(1452), o = a(0), l = Object(o.a)(n.a, r.a, r.b, !1, null, null, null); t.default = l.exports }})
