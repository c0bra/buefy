webpackJsonp([45, 83, 284, 285], {1497: function (e, t, n) { 'use strict'; var i = n(1498); t.a = i.a }, 1498: function (e, t, n) { 'use strict'; t.a = {data: function () { return {indefinteToast: null} }, methods: {toast: function () { this.$buefy.toast.open('Something happened') }, success: function () { this.$buefy.toast.open({message: 'Something happened correctly!', type: 'is-success'}) }, danger: function () { this.$buefy.toast.open({duration: 5e3, message: "Something's not good, also I'm on <b>bottom</b>", position: 'is-bottom', type: 'is-danger'}) }, indefinite: function () { this.indefinteToast = this.$buefy.toast.open({indefinite: !0, message: "I won't close until you explicitly close me!", type: 'is-warning'}) }, closeIndefinite: function () { this.indefinteToast && (this.indefinteToast.close(), this.indefinteToast = null) }}} }, 2108: function (e, t, n) { 'use strict'; var i = n(2109); n.d(t, 'a', function () { return i.a }), n.d(t, 'b', function () { return i.b }) }, 2109: function (e, t, n) { 'use strict'; n.d(t, 'a', function () { return i }), n.d(t, 'b', function () { return o }); var i = function () { var e = this.$createElement, t = this._self._c || e; return t('section', [t('div', {staticClass: 'buttons'}, [t('b-button', {attrs: {label: 'Launch toast (default)', size: 'is-medium'}, on: {click: this.toast}}), t('b-button', {attrs: {label: 'Launch toast (custom)', type: 'is-success', size: 'is-medium'}, on: {click: this.success}}), t('b-button', {attrs: {label: 'Launch toast (custom)', type: 'is-danger', size: 'is-medium'}, on: {click: this.danger}})], 1), t('div', {staticClass: 'buttons'}, [t('b-button', {attrs: {label: 'Launch toast (indefinite)', type: 'is-success', size: 'is-medium'}, on: {click: this.indefinite}}), this.indefinteToast ? t('b-button', {attrs: {label: 'close toast (indefinite)', type: 'is-danger', size: 'is-medium'}, on: {click: this.closeIndefinite}}) : this._e()], 1)]) }, o = [] }, 2238: function (e, t, n) { 'use strict'; var i = n(2239); t.a = i.a }, 2239: function (e, t, n) { 'use strict'; var i = n(553), o = n(554), s = n(555), a = n(2569), c = n.n(a); t.a = {data: function () { return {api: i.default, variables: o.default, ExSimple: s.default, ExSimpleCode: c.a, outsideVueInstance: "\n            import { ToastProgrammatic as Toast } from 'buefy'\n            Toast.open('Toasty!')"} }} }, 2567: function (e, t, n) { 'use strict'; var i = n(2568); n.d(t, 'a', function () { return i.a }), n.d(t, 'b', function () { return i.b }) }, 2568: function (e, t, n) { 'use strict'; n.d(t, 'a', function () { return i }), n.d(t, 'b', function () { return o }); var i = function () { var e = this, t = e.$createElement, n = e._self._c || t; return n('div', [n('div', {staticClass: 'content'}, [n('p', [e._v('They have a slightly transparency and are queued to not confuse the user.')]), n('p', [n('small', [n('b', [e._v('Note:')]), e._v(' They queue with '), n('router-link', {attrs: {to: '/documentation/snackbar'}}, [e._v('Snackbars')]), e._v(' as well.')], 1)])]), n('Example', {attrs: {title: 'From inside Vue instance', component: e.ExSimple, code: e.ExSimpleCode}}), n('Example', {attrs: {title: 'From outside Vue instance'}}, [n('p', [e._v('You can use it on Vuex or VueRouter using this syntax:')]), n('CodeView', {attrs: {lang: 'javascript', code: e._f('pre')(e.outsideVueInstance), expanded: ''}})], 1), n('ApiView', {attrs: {data: e.api}}), n('VariablesView', {attrs: {data: e.variables}})], 1) }, o = [] }, 2569: function (e, t) { e.exports = '<template>\n    <section>\n        <div class="buttons">\n            <b-button\n                label="Launch toast (default)"\n                size="is-medium"\n                @click="toast" />\n            <b-button\n                label="Launch toast (custom)"\n                type="is-success"\n                size="is-medium"\n                @click="success" />\n            <b-button\n                label="Launch toast (custom)"\n                type="is-danger"\n                size="is-medium"\n                @click="danger" />\n        </div>\n        <div class="buttons">\n            <b-button\n                label="Launch toast (indefinite)"\n                type="is-success"\n                size="is-medium"\n                @click="indefinite" />\n            <b-button\n                v-if="indefinteToast"\n                label="close toast (indefinite)"\n                type="is-danger"\n                size="is-medium"\n                @click="closeIndefinite" />\n        </div>\n    </section>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                indefinteToast: null\n            }\n        },\n        methods: {\n            toast() {\n                this.$buefy.toast.open(\'Something happened\')\n            },\n            success() {\n                this.$buefy.toast.open({\n                    message: \'Something happened correctly!\',\n                    type: \'is-success\'\n                })\n            },\n            danger() {\n                this.$buefy.toast.open({\n                    duration: 5000,\n                    message: `Something\'s not good, also I\'m on <b>bottom</b>`,\n                    position: \'is-bottom\',\n                    type: \'is-danger\'\n                })\n            },\n\n            indefinite() {\n                this.indefinteToast = this.$buefy.toast.open({\n                    indefinite: true,\n                    message: `I won\'t close until you explicitly close me!`,\n                    type: \'is-warning\'\n                })\n            },\n            closeIndefinite() {\n                if (this.indefinteToast) {\n                    this.indefinteToast.close();\n                    this.indefinteToast = null;\n                }\n            }\n        }\n    }\n<\/script>\n' }, 553: function (e, t, n) { 'use strict'; Object.defineProperty(t, '__esModule', {value: !0}), t.default = [{props: [{name: '<code>type</code>', description: 'Type (color) of the toast', type: 'String', values: "<code>is-white</code>, <code>is-black</code>, <code>is-light</code>,\n                    <code>is-dark</code>, <code>is-primary</code>, <code>is-info</code>, <code>is-success</code>,\n                    <code>is-warning</code>, <code>is-danger</code>,\n                    and any other colors you've set in the <code>$colors</code> list on Sass", default: '<code>is-dark</code>'}, {name: '<code>message</code>', description: 'Message text (can contain HTML). <div class="notification is-danger">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to <a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank" rel="noopener">XSS vulnerabilities</a>. Only use HTML interpolation on trusted content and never on user-provided content.</div>', type: 'String, Array<VNode>', values: '—', default: '—'}, {name: '<code>position</code>', description: 'Which position the toast will appear', type: 'String', values: '<code>is-top-right</code>, <code>is-top</code>, <code>is-top-left</code>, <code>is-bottom-right</code>, <code>is-bottom</code>, <code>is-bottom-left</code>', default: '<code>is-top</code>'}, {name: '<code>duration</code>', description: 'Visibility duration in milliseconds', type: 'Number', values: '—', default: '<code>2000</code>'}, {name: '<code>queue</code>', description: 'If should queue with others notices (snackbar/toast/notification)', type: 'Boolean', values: '—', default: '<code>true</code>'}, {name: '<code>indefinite</code>', description: 'Show indefinitely until it is dismissed programmatically', type: 'Boolean', values: '—', default: '<code>false</code>'}, {name: '<code>container</code>', description: 'DOM element the toast will be created on. Note that this also changes the <code>position</code> of the toast from <code>fixed</code> to <code>absolute</code>. Meaning that the container should be <code>fixed</code>. Also note that this will override the <code>defaultContainerElement</code> if you specified it in your Buefy Constructor Options. See Constructor options for more details.', type: 'String', values: '—', default: '<code>body</code>'}]}] }, 554: function (e, t, n) { 'use strict'; Object.defineProperty(t, '__esModule', {value: !0}), t.default = [{name: '<code>$toast-border-radius</code>', default: '<code>2em</code>'}, {name: '<code>$toast-opacity</code>', default: '<code>0.92</code>'}, {name: '<code>$toast-box-shadow</code>', default: '<code>0 1px 4px rgba(0, 0, 0, 0.12), 0 0 6px rgba(0, 0, 0, 0.04)</code>'}] }, 555: function (e, t, n) { 'use strict'; Object.defineProperty(t, '__esModule', {value: !0}); var i = n(2108), o = n(1497), s = n(0), a = Object(s.a)(o.a, i.a, i.b, !1, null, null, null); t.default = a.exports }, 615: function (e, t, n) { 'use strict'; Object.defineProperty(t, '__esModule', {value: !0}); var i = n(2567), o = n(2238), s = n(0), a = Object(s.a)(o.a, i.a, i.b, !1, null, null, null); t.default = a.exports }})
